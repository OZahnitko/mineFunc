name: Faker

on: push

jobs:
  test:
    name: Test the application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run test
        run: npm run test

      - name: Show the dir
        run: ls -la

  build:
    name: Build function
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache node_modules
        uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build function
        run: npm run build

      - name: Copy package.json
        run: cp package.json ./build

      - name: Install production dependencies
        working-directory: ./build
        run: npm install --only=prod

      - name: Zip the function
        working-directory: ./build
        run: zip -r function.zip .

      - name: Archive function.zip
        uses: actions/upload-artifact@v2
        with:
          name: function.zip
          path: build/function.zip

      - name: Show content of the dir now
        working-directory: ./build
        run: ls -la

  deploy:
    name: Deploy function to AWS
    runs-on: ubuntu-latest
    needs: ["build"]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_CLI_PAGER: ""
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Initialize Terraform
        id: init
        working-directory: ./terraform
        run: terraform init

      - name: Lambda Function name
        working-directory: ./terraform
        run: |
          terraform output -raw lambda_function_name
          sed -i "s/LAMBDA_FUNCTION_NAME=.*/LAMBDA_FUNCTION_NAME=$(terraform output -raw lambda_function_name)/" ../.env.production

      - name: See what's in env
        run: cat .env.production

      - name: Download function.zip
        uses: actions/download-artifact@v2
        with:
          name: function.zip

      - name: Show where the zip was downloaded
        run: ls -la

      - name: dep time
        working-directory: ./terraform
        run: |
          aws lambda update-function-code \
            --function-name "$(terraform output -raw lambda_function_name)" \
            --zip-file fileb://../function.zip
